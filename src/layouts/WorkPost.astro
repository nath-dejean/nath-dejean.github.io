---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'works'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				display: flex;
				flex-direction: column;
				gap: clamp(3rem, 6vw, 5rem);
			}

			.work-hero {
				padding: clamp(4rem, 8vw, 6.5rem) min(8vw, 6rem) 0;
				display: grid;
				gap: clamp(1.5rem, 3vw, 2.4rem);
			}

			.work-hero .meta {
				display: flex;
				flex-wrap: wrap;
				gap: 1.2rem;
				align-items: center;
				color: rgba(244, 247, 255, 0.65);
				letter-spacing: 0.12em;
				text-transform: uppercase;
				font-size: 0.8rem;
			}

			.work-hero .meta span + span::before {
				content: "â€¢";
				margin: 0 0.8rem;
				opacity: 0.45;
			}

			.work-hero p {
				max-width: min(720px, 90%);
				font-size: clamp(1.05rem, 1.85vw, 1.3rem);
				color: rgba(244, 247, 255, 0.78);
			}

			.work-media {
				padding: 0 min(8vw, 6rem);
			}

			.hero-image {
				position: relative;
				border-radius: 26px;
				overflow: hidden;
				box-shadow: var(--shadow-strong);
				background: linear-gradient(135deg, rgba(108, 243, 255, 0.18), rgba(167, 114, 255, 0.12));
			}

			.hero-image::before {
				content: "";
				position: absolute;
				inset: 12px;
				border-radius: inherit;
				border: 1px solid rgba(255, 255, 255, 0.12);
				opacity: 0.6;
				pointer-events: none;
			}

			.hero-image img {
				display: block;
				width: 100%;
				height: auto;
				object-fit: cover;
			}

			.work-body {
				padding: 0 min(8vw, 6rem) clamp(4rem, 8vw, 6rem);
			}

			.work-prose {
				max-width: 820px;
				margin: 0 auto;
				background: rgba(5, 7, 21, 0.55);
				box-shadow: var(--shadow-soft);
				border: 1px solid rgba(255, 255, 255, 0.08);
			}

			.work-prose :global(p),
			.work-prose :global(li) {
				color: rgba(244, 247, 255, 0.85);
			}

			@media (max-width: 720px) {
				.work-hero {
					padding-inline: min(6vw, 2rem);
				}
				.work-media,
				.work-body {
					padding-inline: min(6vw, 2rem);
				}
				.hero-image::before {
					inset: 8px;
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<section class="work-hero reveal">
					<span class="badge">Project spotlight</span>
					<h1>{title}</h1>
					<p>{description}</p>
					<div class="meta">
						<span>
							<FormattedDate date={pubDate} />
						</span>
						{updatedDate && (
							<span>Updated <FormattedDate date={updatedDate} /></span>
						)}
					</div>
				</section>
				{heroImage && (
					<section class="work-media reveal">
						<div class="hero-image">
							<img width={1200} height={640} src={heroImage} alt="" loading="lazy" />
						</div>
					</section>
				)}
				<section class="work-body reveal">
					<div class="surface-panel work-prose">
						<slot />
					</div>
				</section>
			</article>
		</main>
		<Footer />
	</body>
</html>