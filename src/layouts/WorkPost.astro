---
import type { CollectionEntry } from 'astro:content';
import BasicLayout from './BasicLayout.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'works'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<BasicLayout>
	<Fragment slot="head">
		<title>{title} | Works</title>
		<meta name="description" content={description} />
		<style>
			article {
				position: relative;
				max-width: 1200px;
				margin: 0 auto;
				padding: clamp(3rem, 6vw, 5rem) clamp(1.5rem, 5vw, 3rem) clamp(4rem, 8vw, 6rem);
			}

			/* Unified flowing container */
			.work-container {
				position: relative;
				isolation: isolate;
			}

			/* Header section - no hard borders */
			.work-hero {
				padding: clamp(2rem, 2vw, 4rem) 0;
				text-align: center;
				position: relative;
			}

			.work-hero .badge {
				display: inline-flex;
				align-items: center;
				gap: 0.5rem;
				padding: 0.45rem 1.5rem;
				font-size: 0.68rem;
				letter-spacing: 0.16em;
				text-transform: uppercase;
				font-weight: 700;
				background: linear-gradient(135deg, #6cf3ff, #a772ff);
				color: rgba(5, 5, 17, 0.92);
				border-radius: 999px;
				box-shadow: 0 8px 24px -12px rgba(108, 243, 255, 0.6);
				margin-bottom: clamp(1.5rem, 3vw, 2.5rem);
			}

			.work-hero h1 {
				margin: 0 0 clamp(1rem, 2.5vw, 1.8rem);
				font-size: clamp(2.2rem, 5.5vw, 4.2rem);
				line-height: 1.12;
				color: rgba(247, 249, 255, 0.98);
				text-shadow: 0 4px 18px rgba(0, 0, 0, 0.3);
				font-weight: 600;
				letter-spacing: -0.02em;
			}

			.work-hero p {
				margin: 0 auto;
				max-width: 68ch;
				font-size: clamp(1.05rem, 1.8vw, 1.25rem);
				color: rgba(243, 246, 255, 0.78);
				line-height: 1.68;
			}

			.work-hero .meta {
				display: inline-flex;
				justify-content: center;
				flex-wrap: wrap;
				gap: 0.8rem;
				margin-top: clamp(1.5rem, 2vw, 2rem);
				padding: 0.65rem 1.3rem;
				border-radius: 999px;
				background: rgba(255, 255, 255, 0.04);
				backdrop-filter: blur(8px);
				border: 1px solid rgba(255, 255, 255, 0.06);
				color: rgba(243, 246, 255, 0.58);
				letter-spacing: 0.12em;
				text-transform: uppercase;
				font-size: 0.72rem;
			}

			.work-hero .meta span + span::before {
				content: "â€¢";
				margin: 0 0.6rem;
				opacity: 0.4;
			}

			/* Image flows naturally into content */
			.work-media {
				margin: clamp(2rem, 4vw, 3.5rem) 0;
				position: relative;
			}

			.hero-image {
				position: relative;
				border-radius: 20px;
				overflow: hidden;
				box-shadow: 
					0 0 0 1px rgba(255, 255, 255, 0.08),
					0 24px 60px -20px rgba(0, 0, 0, 0.4),
					0 8px 24px -8px rgba(108, 243, 255, 0.15);
				background: linear-gradient(135deg, rgba(108, 243, 255, 0.08), rgba(167, 114, 255, 0.08));
				transform-origin: center;
				transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
			}

			.hero-image:hover {
				transform: scale(1.01);
			}

			.hero-image::before {
				content: "";
				position: absolute;
				inset: 0;
				background: linear-gradient(135deg, rgba(108, 243, 255, 0.12), rgba(167, 114, 255, 0.08));
				opacity: 0;
				transition: opacity 0.5s ease;
				pointer-events: none;
				z-index: 1;
			}

			.hero-image:hover::before {
				opacity: 1;
			}

			.hero-image img {
				display: block;
				width: 100%;
				height: auto;
				max-height: 580px;
				object-fit: cover;
			}

			/* Content flows without boxes */
			.work-body {
				padding: clamp(1rem, 1.5vw, 2rem) 0 0;
			}

			.work-prose {
				max-width: 820px;
				margin: 0 auto;
				padding: clamp(2rem, 4vw, 3rem) clamp(1.5rem, 4vw, 2.5rem);
				background: rgba(255, 255, 255, 0.02);
				backdrop-filter: blur(12px);
				border-radius: 18px;
				border: 1px solid rgba(255, 255, 255, 0.06);
				box-shadow: 
					0 0 0 1px rgba(255, 255, 255, 0.03),
					0 12px 36px -12px rgba(0, 0, 0, 0.25);
			}

			/* Typography in content */
			.work-prose :global(p),
			.work-prose :global(li) {
				color: rgba(243, 246, 255, 0.82);
				line-height: 1.75;
			}

			.work-prose :global(h2),
			.work-prose :global(h3),
			.work-prose :global(h4) {
				color: rgba(247, 249, 255, 0.96);
				margin-bottom: 0.6em;
				font-weight: 600;
				letter-spacing: -0.01em;
			}

			.work-prose :global(h2) {
				font-size: clamp(1.5rem, 2.8vw, 2rem);
			}

			.work-prose :global(h3) {
				font-size: clamp(1.25rem, 2.2vw, 1.6rem);
			}

			.work-prose :global(a) {
				color: #6cf3ff;
				text-decoration: none;
				border-bottom: 1px solid rgba(108, 243, 255, 0.3);
				transition: border-color 0.3s ease;
			}

			.work-prose :global(a:hover) {
				border-bottom-color: #6cf3ff;
			}

			.work-prose :global(code) {
				background: rgba(255, 255, 255, 0.06);
				padding: 0.2em 0.4em;
				border-radius: 4px;
				font-size: 0.9em;
				border: 1px solid rgba(255, 255, 255, 0.08);
			}

			.work-prose :global(pre) {
				background: rgba(0, 0, 0, 0.3);
				padding: 1.5rem;
				border-radius: 12px;
				border: 1px solid rgba(255, 255, 255, 0.08);
				overflow-x: auto;
			}

			.work-prose :global(blockquote) {
				margin: 2rem 0;
				padding-left: 1.5rem;
				border-left: 3px solid rgba(108, 243, 255, 0.4);
				color: rgba(243, 246, 255, 0.7);
				font-style: italic;
			}

			.work-prose :global(img) {
				border-radius: 12px;
				margin: 2rem 0;
				box-shadow: 0 8px 24px -8px rgba(0, 0, 0, 0.3);
			}

			@media (max-width: 768px) {
				article {
					padding: clamp(2rem, 8vw, 3rem) clamp(1rem, 4vw, 1.5rem) clamp(3rem, 10vw, 4rem);
				}

				.work-hero h1 {
					font-size: clamp(1.8rem, 7vw, 2.5rem);
				}

				.hero-image img {
					max-height: 420px;
				}

				.work-prose {
					padding: clamp(1.5rem, 5vw, 2rem) clamp(1rem, 4vw, 1.5rem);
				}
			}
		</style>
	</Fragment>

	<article>
		<div class="work-container">
			<section class="work-hero reveal">
				<span class="badge">Project spotlight</span>
				<h1>{title}</h1>
				<p>{description}</p>
				<div class="meta">
					<span>
						<FormattedDate date={pubDate} />
					</span>
					{updatedDate && (
						<span>Updated <FormattedDate date={updatedDate} /></span>
					)}
				</div>
			</section>
			
			{heroImage && (
				<section class="work-media reveal">
					<div class="hero-image">
						<img width={1200} height={640} src={heroImage} alt={title} loading="lazy" />
					</div>
				</section>
			)}
			
			<section class="work-body reveal">
				<div class="work-prose">
					<slot />
				</div>
			</section>
		</div>
	</article>
</BasicLayout>