<style>
	canvas#orb-canvas {
	  position: fixed;
	  top: 0;
	  left: 0;
	  pointer-events: none;
	  z-index: 0;
	}
  </style>
  
  <canvas id="orb-canvas"></canvas>
  
  <script is:inline>
	const canvas = document.getElementById("orb-canvas");
	const ctx = canvas.getContext("2d");
  
	let width = window.innerWidth;
	let height = window.innerHeight;
	canvas.width = width;
	canvas.height = height;
  
	window.addEventListener("resize", () => {
	  width = window.innerWidth;
	  height = window.innerHeight;
	  canvas.width = width;
	  canvas.height = height;
	});
  
	const orbs = [];
  
	class Orb {
	  constructor(x, y) {
		this.x = x;
		this.y = y;
		this.alpha = 1;
		this.size = Math.random() * 10 + 4;
		this.dx = (Math.random() - 0.5) * 1.5;
		this.dy = (Math.random() - 0.5) * 1.5;
		this.hue = Math.random() * 30 + 330;
		this.sparkle = Math.random() > 0.8;
	  }
  
	  update() {
		this.x += this.dx;
		this.y += this.dy;
		this.alpha -= 0.01;
	  }
  
	  draw() {
		const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);
		gradient.addColorStop(0, `hsla(${this.hue}, 100%, 70%, ${this.alpha})`);
		gradient.addColorStop(1, `hsla(${this.hue}, 100%, 70%, 0)`);
  
		ctx.beginPath();
		ctx.fillStyle = gradient;
		ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
		ctx.fill();
  
		if (this.sparkle) {
		  ctx.beginPath();
		  ctx.moveTo(this.x - this.size / 2, this.y);
		  ctx.lineTo(this.x + this.size / 2, this.y);
		  ctx.moveTo(this.x, this.y - this.size / 2);
		  ctx.lineTo(this.x, this.y + this.size / 2);
		  ctx.strokeStyle = `hsla(${this.hue}, 100%, 80%, ${this.alpha * 0.6})`;
		  ctx.lineWidth = 0.5;
		  ctx.stroke();
		}
	  }
	}
  
	function animate() {
	  ctx.clearRect(0, 0, width, height);
	  for (let i = orbs.length - 1; i >= 0; i--) {
		const orb = orbs[i];
		orb.update();
		orb.draw();
		if (orb.alpha <= 0) {
		  orbs.splice(i, 1);
		}
	  }
	  requestAnimationFrame(animate);
	}
  
	document.addEventListener("click", (e) => {
	  for (let i = 0; i < 25; i++) {
		orbs.push(new Orb(e.clientX, e.clientY));
	  }
	});
  
	animate();
</script>